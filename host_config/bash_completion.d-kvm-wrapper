# kvm-wrapper completion
# Copyright (C) 2011 Dominique Martinet <asmadeus@codewreck.org>
# Published under the WTFPLv2 (see LICENSE)

have kvm-wrapper &&
_kvm_wrapper()
{
    local cur prev vms

    COMPREPLY=()
    cur=`_get_cword`
    prev=${COMP_WORDS[COMP_CWORD-1]}

    if [[ "$cur" == -* ]]; then
        COMPREPLY=( $( compgen -W 'start stop list screen create bootstrap remove edit create-disk status' -- "$cur" ) )
        return 0
    fi

    case "$prev" in
        list|create-desc)
            return 0
            ;;
        help)
            COMPREPLY=( $( compgen -W "create" -- "$cur" ) )
            return 0
            ;;
        create)
#            COMPREPLY=( $( compgen -W '-m --mem -s --size -e --edit -c --cpu' -- "$cur" ) )
            return 0
            ;;
    esac
    local ROOTDIR=/usr/share/kvm-wrapper
    . $ROOTDIR/kvm-wrapper.conf >&/dev/null #complains random_mac isn't defined, but doesn't matter to us...
    case "$prev" in
        start|screen|bootstrap|create-disk|remove|mount-disk|load-state)
			if [[ -n "`\ls -1 $PID_DIR/*-vm.pid 2>/dev/null`" ]]; then 
	            vms=`\ls -1 $ROOTDIR/vm/*-vm|sed -e "s:$ROOTDIR/vm/::g" -e 's/-vm//g'|grep -v -x -F "$(\ls -1 $PID_DIR/*-vm.pid|sed -e "s@$PID_DIR/.*:@@g" -e 's/-vm.pid//g')"`
			else
	            vms=`\ls -1 $ROOTDIR/vm/*-vm|sed -e "s:$ROOTDIR/vm/::g" -e 's/-vm//g'`
			fi
   	        COMPREPLY=( $( compgen -W "$vms" -- "$cur" ) )
       	    return 0
            ;;
        stop|status|attach|migrate|save-state|balloon|monitor|serial)
            vms=`\ls -1 $PID_DIR/*-vm.pid 2>/dev/null |sed -e "s@$PID_DIR/.*:@@g" -e 's/-vm.pid//g'`
            COMPREPLY=( $( compgen -W "$vms" -- "$cur" ) )
            return 0
            ;;
        edit)
            vms=`\ls -1 $ROOTDIR/vm/*-vm|sed -e "s:$ROOTDIR/vm/::g" -e 's/-vm//g'`
            COMPREPLY=( $( compgen -W "$vms" -- "$cur" ) )
            return 0
            ;;
		umount-disk)
			vms=`\ls -1 /mnt|sed -e 's:/mnt/::'`
            COMPREPLY=( $( compgen -W "$vms" -- "$cur" ) )
            return 0
            ;;
    esac

   _expand || return 0

    COMPREPLY=( $( compgen -W 'help attach create-desc start stop list screen create bootstrap remove edit create-disk status mount-disk umount-disk migrate receive-migrate save-state load-state balloon monitor serial' -- "$cur" ) )
} &&
complete -F _kvm_wrapper $filenames kvm-wrapper

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
